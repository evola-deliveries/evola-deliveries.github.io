services:
  # redis:
  #   image: redis:alpine
  #   networks:
  #     - evola_network

  trigger-fetch:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/trigger-fetch
    env_file:
      - ./.env
      - ./dispatchers/trigger-fetch/.env
    command: npm run trigger-fetch
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - redis
    networks:
      - evola_network
    profiles:
      - manual

  courier-service:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/courier-service
    env_file:
      - ./.env
      - ./dispatchers/courier-service/.env
    command: npm run courier-service
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - redis
    ports:
      - 3000:3000
    networks:
      - evola_network
    profiles:
      - manual

  contract-watcher:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-watcher
    env_file:
      - ./.env
      - ./dispatchers/contract-watcher/.env
    command: npm run contract-watcher
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - redis
    networks:
      - evola_network
    profiles:
      - manual

  fetch-contracts:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/fetch-contracts
    env_file:
      - ./.env
      - ./workers/fetchContracts/.env
    command: npm run fetchContracts
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - redis
    networks:
      - evola_network

  process-contract:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/process-contract
    env_file:
      - ./.env
      - ./workers/processContract/.env
    command: npm run processContract
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - redis
    networks:
      - evola_network
  contract-created:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-created
    env_file:
      - ./.env
      - ./workers/contractCreated/.env
    depends_on:
      - redis
    command: npm run contractCreated
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - evola_network

  contract-updated:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-updated
    env_file:
      - ./.env
      - ./workers/contractUpdated/.env
    depends_on:
      - redis
    command: npm run contractUpdated
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - evola_network

  contract-completed:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-completed
    env_file:
      - ./.env
      - ./workers/contractCompleted/.env
    depends_on:
      - redis
    command: npm run contractCompleted
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - evola_network

  update-corporation:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/update-corporation
    env_file:
      - ./.env
      - ./workers/updateCorporation/.env
    depends_on:
      - redis
    command: npm run updateCorporation
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - evola_network

  update-member:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/update-member
    env_file:
      - ./.env
      - ./workers/updateMember/.env
    depends_on:
      - redis
    command: npm run updateMember
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - evola_network
  
  send-eve-mail:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/send-eve-mail
    env_file:
      - ./.env
      - ./workers/sendEveMail/.env
    depends_on:
      - redis
    command: npm run sendEveMail
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - evola_network

# networks:
#   evola_network:
#     driver: bridge
#     name: evola_network
networks:
  evola_network:
    external: true