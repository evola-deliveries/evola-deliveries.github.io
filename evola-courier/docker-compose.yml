services:
  redis:
    image: redis:alpine
    networks:
      - evola_network

  trigger-fetch:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/trigger-fetch
    env_file:
      - ./common.env
      - ./dispatchers/trigger-fetch/.env
    command: npm run trigger-fetch
    depends_on:
      - redis
    networks:
      - evola_network
    profiles:
      - manual

  courier-service:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/courier-service
    env_file:
      - ./common.env
      - ./dispatchers/courier-service/.env
    command: npm run courier-service
    depends_on:
      - redis
    ports:
      - 3000:3000
    networks:
      - evola_network
    profiles:
      - manual

  contract-watcher:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-watcher
    env_file:
      - ./common.env
      - ./dispatchers/contract-watcher/.env
    command: npm run contract-watcher
    depends_on:
      - redis
    networks:
      - evola_network
    profiles:
      - manual

  fetch-contracts:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/fetch-contracts
    env_file:
      - ./common.env
      - ./workers/fetchContracts/.env
    command: npm run fetchContracts
    depends_on:
      - redis
    networks:
      - evola_network

  process-contract:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/process-contract
    env_file:
      - ./common.env
      - ./workers/processContract/.env
    command: npm run processContract
    depends_on:
      - redis
    networks:
      - evola_network
  contract-created:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-created
    env_file:
      - ./common.env
      - ./workers/contractCreated/.env
    depends_on:
      - redis
    command: npm run contractCreated
    networks:
      - evola_network

  contract-updated:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-updated
    env_file:
      - ./common.env
      - ./workers/contractUpdated/.env
    depends_on:
      - redis
    command: npm run contractUpdated
    networks:
      - evola_network

  contract-completed:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/contract-completed
    env_file:
      - ./common.env
      - ./workers/contractCompleted/.env
    depends_on:
      - redis
    command: npm run contractCompleted
    networks:
      - evola_network

  corporation-created:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/corporation-created
    env_file:
      - ./common.env
      - ./workers/corporationCreated/.env
    depends_on:
      - redis
    command: npm run corporationCreated
    networks:
      - evola_network

  member-created:
    build:
      context: .
      dockerfile: dockerfile
    image: evolaeve/member-created
    env_file:
      - ./common.env
      - ./workers/memberCreated/.env
    depends_on:
      - redis
    command: npm run memberCreated
    networks:
      - evola_network

networks:
  evola_network:
    driver: bridge
    name: evola_network
# networks:
#   evola_network:
#     external: true