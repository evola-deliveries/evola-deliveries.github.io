{"version":3,"sources":["reportWebVitals.js","services/config-service/index.js","services/janice-service/index.js","components/package-details/index.js","services/utils-service/index.js","components/order-ticket/index.js","services/data-service/index.js","services/esi-service/index.js","components/contract-creator/index.js","components/contracts-page/index.js","components/nav-bar/index.js","components/footer-control/index.js","components/NoMatch-Page/not-found.svg","components/NoMatch-Page/index.js","components/main-page/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","evola_api_url","process","discord_url","janice_url","esi_url","directus_url","service","getAppraisal","content","method","cache","mode","headers","redirect","referrerPolicy","body","fetch","Config","response","contentType","get","includes","TypeError","json","getTotalVolume","result","undefined","reduceRight","items","number","item","itemType","packagedVolume","amount","PackageDetails","system","onPricingChange","useState","setContent","errorMessage","setErrorMessage","success","setSuccess","overridePriceCheck","setOveridePriceCheck","overridePrice","setOveridePrice","overrideVolume","setOverideVolume","HandledAppraisal","length","effectivePrices","totalSellPrice","Janice","code","isDisabled","className","htmlFor","id","type","step","min","placeholder","value","onChange","event","val","parseFloat","target","isNaN","preventDefault","disabled","onClick","catch","reason","message","clipboardCopy","text","navigator","clipboard","writeText","ContractCreator","outbound","inbound","pricing","janice","href","rel","UtilsService","icon","faCopy","totals","volumeInvalid","Number","volume","toLocaleString","reward","collateral","minimumReward","limits","total","price","collateralInvalid","routes","Data","default","getRoutes","regionName","split","systemName","region","find","this","systems","regions","getInboundRoute","outboundRegionName","outboundSystemName","inboundRegionName","inboundSystemName","outboundRegion","outboundSystem","inboundRegion","getOutboundRoute","getContracts","calculatePricing","inboundRouteDeep","volumeIsk","Math","ceil","collateralIsk","setPricing","DataService","outboundValue","setOutboundValue","useEffect","setOutboundRoute","inboundValue","setInboundValue","setInboundRoute","inboundRoute","outboundRoute","outstandingContracts","setOutstandingContracts","progressContracts","setProgressContracts","HundredContracts","setLast100ContractTime","MJJitaHundredContracts","setLast100MJJitaContracts","ContractService","r","Outstanding","InProgress","console","log","class","ConfigService","name","defaultValue","hidden","map","route","label","station","ContractsPage","NavigationBar","to","FooterControl","NoMatchPage","src","NotFoundSvg","alt","MainPage","style","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccd1f498.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const config = {\n    evola_api_url: process.env.REACT_APP_EVOLA_API,\n    discord_url: process.env.REACT_APP_DISCORD_URL,\n    janice_url: process.env.REACT_APP_JANICE_URL,\n    esi_url: process.env.REACT_APP_ESI_API,\n    directus_url: process.env.REACT_APP_DIRECTUS_API\n}\n\nexport default config;","import { reduceRight } from 'lodash';\nimport Config from '../config-service';\n\nconst service = {\n    async getAppraisal(content = \"\") {\n        const config = {\n            method: 'POST',\n            cache: 'no-cache',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'text/plain',\n                'accept': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: content\n        };\n\n        return await fetch(Config.evola_api_url, config).then(response => {\n            const contentType = response.headers.get('content-type');\n            if (!contentType || !contentType.includes('application/json')) {\n                throw new TypeError(\"Oops, we haven't got JSON!\");\n            }\n            return response.json();\n        });\n    },\n    getTotalVolume(result) {\n        if (result === undefined) return;\n\n        return reduceRight(result.items, (number, item) => {\n            return number + (item.itemType.packagedVolume * item.amount);\n        }, 0);\n    }\n};\n\nexport default service;","import React, { useState } from 'react';\nimport Janice from '../../services/janice-service';\n\nexport default function PackageDetails({ system, onPricingChange }) {\n    const [content, setContent] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n    const [overridePriceCheck, setOveridePriceCheck] = useState(false);\n    const [overridePrice, setOveridePrice] = useState();\n    const [overrideVolume, setOverideVolume] = useState();\n\n    const handleOverridePriceCheck = () => {\n        setOveridePriceCheck(!overridePriceCheck);\n        setErrorMessage(\"\");\n        setSuccess(false);\n    };\n\n    const handleOverridePrice = event => {\n        let val = parseFloat(event.target.value, 10);\n        if (isNaN(val)) {\n            event.preventDefault();\n        } else {\n            // is A Number\n            if(val >= 0 ) {\n                setOveridePrice(val)\n            } else { \n                event.preventDefault();\n            }             \n        }\n    };\n\n    const handleOverrideVolume = event => {\n        let val = parseFloat(event.target.value, 10);\n        if (isNaN(val)) {\n            event.preventDefault();\n        } else {\n            // is A Number\n            if(val >= 0 ) {\n                setOverideVolume(val);\n            } else { \n                event.preventDefault();\n            }             \n        }\n    };\n\n    const handleContentChange = (event) => setContent(event.target.value);\n    const HandledAppraisal = (result) => {\n        if (result.items.length === 0) {\n            setErrorMessage(\"No Prices Found for items.\");\n            setSuccess(false);\n            return;\n        }\n\n        onPricingChange(result.effectivePrices.totalSellPrice, Janice.getTotalVolume(result), result.code);\n\n        setErrorMessage(\"\");\n        setSuccess(true);\n    };\n\n    const getJanicePrices = (event) => {\n        if (overridePriceCheck) {\n            onPricingChange(overridePrice, overrideVolume, '');\n            setErrorMessage(\"\");\n            setSuccess(true);\n            return;\n        }\n        if (content !== '' || content === undefined) {\n            Janice.getAppraisal(content)\n                .then(HandledAppraisal)\n                .catch((reason) => setErrorMessage(reason.message));\n        } else {\n            setSuccess(false);\n            setErrorMessage(\"Please enter at least one item to the package.\")\n        }\n    };\n\n    const isDisabled = () => system === undefined;\n\n    return (\n        <div>\n            <h3 className=\"w-full font-bold text-lg leading-tight\">Package Details</h3>\n            <p>Select a outbound route and a inbound route to enable the text area below.</p>\n            <div>\n                {overridePriceCheck ? <div className=\"flex-wrap bg-gray-100 border-l-4 my-2 border-gray-300 rounded-md w-full px-6 py-4 cursor-pointer\">\n                <div className='flex justify-between content-center'>\n                    <label className=\"mr-2\" htmlFor=\"input-Isk\">\n                        Total Sell Price\n                    </label>\n                    <input id=\"input-Isk\" type='number' step=\"0.1\" min='0' placeholder=\"0\" value={overridePrice} onChange={handleOverridePrice} />\n                </div>\n                <div className='flex justify-between'>\n                    <label className=\"mr-2\" htmlFor=\"input-volume\">\n                        Total Volume\n                    </label>\n                    <input id=\"input-volume\" type='number' step=\"0.1\" min='0' placeholder=\"0\" value={overrideVolume} onChange={handleOverrideVolume}/>\n                </div>\n                </div> : <textarea className=\"w-full rounded disabled:bg-gray-200\" disabled={isDisabled()} onChange={handleContentChange} placeholder=\"Tritanium 1000 ...\"></textarea>}\n            </div>\n            <div className=\"flex\">\n                <button className=\"bg-green-700 disabled:bg-gray-500 text-white px-6 py-2 rounded font-medium hover:bg-green-600 transition duration-200 each-in-out\" disabled={isDisabled()} onClick={getJanicePrices}>Calculate Prices</button>\n                <div className='px-6 py-2'>\n                    <input className=\"form-check-input appearance-none border border-gray-300 rounded-sm bg-white checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 mt-1 align-top bg-no-repeat bg-center bg-contain float-left mr-2 cursor-pointer\" type=\"checkbox\" value={overridePriceCheck} onChange={handleOverridePriceCheck} disabled={isDisabled()} id=\"overridePrice\" />\n                    <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"overridePrice\">\n                        Override Price\n                    </label>\n                </div>\n            </div>\n            {errorMessage ? <div className=\"bg-red-100 border-l-4 border-red-300 my-2 rounded-md w-full px-6 py-4 cursor-pointer\">{errorMessage}<br/>You can Override the price instead.</div> : \"\"}\n            {success ? <div className=\"bg-green-100 border-l-4 border-green-300 my-2 rounded-md w-full px-6 py-4 cursor-pointer\">Success! See results on the <span className=\"font-bold\">Order Ticket</span> once you are ready <span className=\"italic\">select and copy/paste</span> the <span className=\"font-bold\">Station's names, Total Reward, Total Collateral and Janice reference</span> into your contract in-game.</div> : \"\"}\n        </div>\n    )\n}\n","const service = {\n    clipboardCopy(text) {\n        navigator.clipboard.writeText(text);\n    }\n};\n\nexport default service;","import React from 'react';\nimport Config from '../../services/config-service';\nimport UtilsService from '../../services/utils-service';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\n\nexport default function ContractCreator({ outbound, inbound, pricing }) {\n    return (\n        <div className=\"py-8\">\n            <div className=\"p-1 border-2 border-black font-sans w-80 sm:w-72 bg-white\">\n                <div className=\"flex justify-center text-4xl font-extrabold\">Evola</div>\n                <div className=\"flex justify-center text-4xl font-extrabold\">Deliveries</div>\n                <div className=\"flex justify-center leading-snug border-b-4 border-black\">Eve Online Corporation</div>\n                <div className=\"text-sm pb-1\">\n                    <hr className=\"border-gray-500\" />\n                    <div className=\"flex justify-between\">\n                        <div>\n                            <span className=\"font-bold\">Package Details</span>\n                        </div>\n                        <span>{pricing && pricing.janice !== \"\"\n                            ? <a href={pricing.janice !== \"\" && Config.janice_url + pricing.janice} target=\"_blank\" rel=\"noreferrer\" className=\"text-purple-900 font-semibold\">Janice {pricing && pricing.janice}</a>\n                            : \"\"}</span>\n                    </div>\n                    <hr className=\"border-gray-500\" />\n                    <div className=\"flex justify-between\">\n                        <span className=\"italic cursor-pointer pl-4\" onClick={() => UtilsService.clipboardCopy((pricing.janice !== \"\" && pricing.janice) || \"\")} >Appraisal Reference <FontAwesomeIcon className=\"cursor-pointer ml-2\" icon={faCopy} onClick={() => UtilsService.clipboardCopy((pricing.janice !== \"\" && pricing.janice) || \"\")} /></span>\n                        <div><span className=\"select-all\">{pricing.janice !== \"\" && pricing.janice}</span></div>\n                    </div>\n\n                    <div className=\"flex justify-between\">\n                        <span className=\"italic pl-4\">Cubic Meter's</span>\n                        <div className={pricing && pricing.totals.volumeInvalid ? \"font-bold text-red-600\" : \"font-bold text-green-600\"}><span className=\"select-all\">{pricing && Number(pricing.volume).toLocaleString('en')}</span> m3</div>\n                    </div>\n\n\n<div className=\"flex justify-between\">\n                        <div className=\"font-bold\">Pricing</div>\n            \n                    </div>\n                    <hr className=\"border-gray-500\" />\n<div className=\"flex justify-between\">\n                        <div className=\"pl-4\">Volume</div>\n                        <div className={pricing && pricing.totals.volumeInvalid ? \"font-bold text-red\" : \"\"}><span className=\"select-all\">{inbound && Number(inbound.reward.volume).toLocaleString('en')}</span> m3</div>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <div className=\"pl-4\">Collateral</div>\n                        <div>{inbound && Number(inbound.reward.collateral).toLocaleString('en')}%</div>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <div>\n                            <span className=\"font-bold\">Limits</span>\n                        </div>\n                    </div>\n                    <hr className=\"border-gray-500\" />\n                    <div className=\"flex justify-between\">\n                        <div className=\"pl-4\">Min Reward</div>\n                        <div><span className=\"select-all\">{inbound && Number(inbound.minimumReward).toLocaleString('en')}</span> isk</div>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <div className=\"pl-4\">Max Volume</div>\n                        <div><span className=\"select-all\">{inbound && Number(inbound.limits.volume).toLocaleString('en')}</span> m3</div>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <div className=\"pl-4\">Max Collateral</div>\n                        <div><span className=\"select-all\">{inbound && Number(inbound.limits.collateral).toLocaleString('en')}</span> isk</div>\n                    </div>\n                    <hr className=\"border-gray-500\" />\n                    <div className=\"flex justify-between\">\n                        <div>\n                            <span className=\"font-bold cursor-pointer\" onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.totals.total).toLocaleString('en'))}>Total Reward</span>\n                            <FontAwesomeIcon className=\"cursor-pointer ml-2\" icon={faCopy} onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.totals.total).toLocaleString('en'))} />\n                        </div>\n                        <div className=\"font-bold text-green-600\"><span className=\"select-all\" onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.totals.total).toLocaleString('en'))}>{pricing && Number(pricing.totals.total).toLocaleString('en')}</span> isk</div>\n                    </div>\n\n                    <div className=\"flex justify-between\">\n                        <div>\n                            <span className=\"font-bold cursor-pointer\" onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.price).toLocaleString('en'))}>Total Collateral</span>\n                            <FontAwesomeIcon className=\"cursor-pointer ml-2\" icon={faCopy} onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.price).toLocaleString('en'))} />\n                        </div>\n                        <div className={pricing && pricing.totals.collateralInvalid ? \"font-bold text-red-600\" : \"font-bold text-green-600\"}><span className=\"select-all\" onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.price).toLocaleString('en'))}>{pricing && Number(pricing.price).toLocaleString('en')}</span> isk</div>\n                    </div>\n\n\n                </div>\n\n                <div className=\"flex justify-center\"></div>\n                <div className=\"border-t-4 border-black flex leading-none text-xs pt-2 pb-1\">\n                    <div className=\"pr-1\">*</div>\n                    <div>\n                        Contracts are issued directly to: <br/><br/>\n                        <span className=\"font-bold select-all cursor-pointer\" onClick={() => UtilsService.clipboardCopy(\"Evola Deliveries\")}>Evola Deliveries</span> <FontAwesomeIcon className=\"cursor-pointer\" icon={faCopy} onClick={() => UtilsService.clipboardCopy(\"Evola Deliveries\")} /><br/><br/>\n                        <span className=\"font-bold\">No Containers!</span><br />\n                        <span className=\"font-bold\">No Assembled Ships!</span><br/>\n                        <span className=\"font-bold\">Expiration: 7 Days</span><br/>\n                        <span className=\"font-bold\">Days to Complete: 7 Days</span><br/><br/>\n                        If you have any feedback please contact <span className=\"font-bold\">Nahtsu</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import Data from './data.json';\nimport { find } from 'lodash';\n\nconst service = {\n    routes: Data.routes,\n    default: Data.default,\n    getRoutes(outbound) {\n        const regionName = outbound.split('|')[0];\n        const systemName = outbound.split('|')[1];\n    \n        const region = find(this.routes, (value) => value.region === regionName);\n        const system = find(region.systems, (value) => value.system === systemName);\n    \n        return system.regions;\n    },\n    getInboundRoute(outbound, inbound) {\n        if (outbound === \"\" || outbound === undefined) return;\n        if (inbound === \"\" || inbound === undefined) return;\n\n        const outboundRegionName = outbound.split('|')[0];\n        const outboundSystemName = outbound.split('|')[1];\n\n        const inboundRegionName = inbound.split('|')[0];\n        const inboundSystemName = inbound.split('|')[1];\n    \n        const outboundRegion = find(this.routes, (value) => value.region === outboundRegionName);\n        const outboundSystem = find(outboundRegion.systems, (value) => value.system === outboundSystemName);\n\n        const inboundRegion = find(outboundSystem.regions, (value) => value.region === inboundRegionName);\n\n        if(!inboundRegion) return;\n\n        const inboundSystem = find(inboundRegion.systems, (value) => value.system === inboundSystemName);\n\n        return inboundSystem;\n    },\n    getOutboundRoute(outbound) {\n        const regionName = outbound.split('|')[0];\n        const systemName = outbound.split('|')[1];\n    \n        const region = find(this.routes, (value) => value.region === regionName);\n        const system = find(region.systems, (value) => value.system === systemName);\n    \n        return system;\n    }\n};\n\nexport default service;","import Config from '../config-service';\n\nconst service = {\n    async getContracts(content = \"\") {\n        const config = {\n            method: 'GET',\n            cache: 'no-cache',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'text/plain',\n                'accept': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n        };\n\n        return await fetch(Config.esi_url, config).then(response => {\n            return response.json();\n        });\n    },\n};\n\nexport default service;","import React, { useEffect, useState } from 'react';\nimport PackageDetails from '../package-details';\nimport OrderTicket from '../order-ticket';\nimport DataService from '../../services/data-service';\nimport ConfigService from '../../services/config-service';\nimport ContractService from \"../../services/esi-service\";\nimport UtilsService from \"../../services/utils-service\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\n\nfunction calculatePricing(inboundRouteDeep, price, volume, janice) {\n    const volumeIsk = inboundRouteDeep ? Math.ceil(volume * inboundRouteDeep.reward.volume) : 0;\n    const collateralIsk = inboundRouteDeep ? Math.ceil((price / 100) * inboundRouteDeep.reward.collateral) : 0;\n    const volumeInvalid = inboundRouteDeep ? inboundRouteDeep.limits.volume < volume : false;\n    const collateralInvalid = inboundRouteDeep ? inboundRouteDeep.limits.collateral < price : false;\n    let total = volumeIsk + collateralIsk;\n    if (inboundRouteDeep && total < inboundRouteDeep.minimumReward) total = inboundRouteDeep.minimumReward;\n\n    return {\n        price: price,\n        volume: volume,\n        janice: janice,\n        totals: {\n            volumeInvalid: volumeInvalid,\n            collateralInvalid: collateralInvalid,\n            volume: volumeIsk,\n            collateral: collateralIsk,\n            total: total\n        }\n    };\n}\n\nexport default function ContractCreator() {\n    const [pricing, setPricing] = useState(calculatePricing(null, 0, 0, \"\"));\n\n    const [outboundValue, setOutboundValue] = useState(DataService.default.region + \"|\" + DataService.default.system);\n\n    useEffect(() => {\n        setOutboundRoute(DataService.getOutboundRoute(outboundValue));\n    }, [outboundValue]);\n\n    const [inboundValue, setInboundValue] = useState(\"\");\n\n    useEffect(() => {\n        setInboundRoute(DataService.getInboundRoute(outboundValue, inboundValue));\n    }, [inboundValue]); // eslint-disable-line react-hooks/exhaustive-deps\n    // TODO fix this\n\n    const handleOutboundChanged = (event) => setOutboundValue(event.target.value);\n    const handleInboundChanged = (event) => setInboundValue(event.target.value);\n\n    const [inboundRoute, setInboundRoute] = useState();\n\n    useEffect(() => {\n        setPricing(calculatePricing(inboundRoute, pricing.price, pricing.volume, pricing.janice));\n    }, [inboundRoute]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const [outboundRoute, setOutboundRoute] = useState();\n\n    const handlePricingChange = (price, volume, janice) => {\n        setPricing(calculatePricing(inboundRoute, price, volume, janice));\n    };\n\n    const [outstandingContracts, setOutstandingContracts] = useState();\n    const [progressContracts, setProgressContracts] = useState();\n    const [HundredContracts, setLast100ContractTime] = useState();\n    const [MJJitaHundredContracts, setLast100MJJitaContracts] = useState();\n\n    ContractService.getContracts().then(r => {\n        setOutstandingContracts(r.Outstanding)\n        setProgressContracts(r.InProgress)\n        setLast100ContractTime(r.HundredContracts)\n        setLast100MJJitaContracts(r.MJJitaHundredContracts)\n    }).catch(reason => {\n        console.log(reason);\n    })\n\n    return (\n        <div className=\"flex flex-wrap -mx-1 overflow-hidden sm:-mx-1 md:-mx-1 lg:-mx-1 xl:-mx-1\">\n            <div className=\"my-1 px-1 w-full overflow-hidden sm:my-1 sm:px-1 sm:w-1/2 md:my-1 md:px-1 md:w-1/2 lg:my-1 lg:px-1 lg:w-1/2 xl:my-1 xl:px-1 xl:w-1/2\">\n                <div className=\"shadow-lg rounded-lg bg-white px-2 py-2\">\n                    <div className=\"my-2\">\n                        <div className=\"headerCont\">\n                            <h4 class=\"md:block text-2xl text-gray-400\">WELCOME TO</h4>\n                            <h3 class=\"md:block font-bold text-3xl text-gray-700\">EVOLA DELIVERIES</h3>\n                            <a class=\"flex items-baseline mt-3 text-3xl text-blue-600 hover:text-blue-900 focus:text-blue-900\" href={ConfigService.discord_url} target=\"_blank\" rel=\"noreferrer\">\n                                <span>Join Discord</span>\n                                <span class=\"text-xl ml-1\">&#x279c;</span>\n                            </a>\n                        </div>\n                        <div className=\"headerCont2\">\n                            <h4 class=\"md:block text-2xl text-gray-400\">Queue Status:</h4>\n                            <h3 class=\"font-bold text-2xl inLine outstandingColor\">{outstandingContracts}</h3>\n                            <h3 className=\"font-bold text-2xl text-gray-700 inLine\">&nbsp;Outstanding&nbsp;</h3>\n                            <h3 class=\"font-bold text-2xl inLine inProgressColor\">{progressContracts}</h3>\n                            <h3 className=\"font-bold text-2xl text-gray-700 inLine\">&nbsp;In Progress</h3>\n                            <div>\n                                <h4 class=\"font-bold text-2xl inLine text-gray-700\">Average Contract Time:&nbsp;</h4>\n                                <h3 class=\"font-bold text-2xl inLine outstandingColor\">{HundredContracts} Hours</h3>\n                            </div>\n                            <div>\n                                <h4 class=\"font-bold text-2xl inLine text-gray-700\">MJ to and from Jita:&nbsp;</h4>\n                                <h3 class=\"font-bold text-2xl inLine outstandingColor\">{MJJitaHundredContracts} Hours</h3>\n                            </div>\n                        </div>\n                        <p class=\"text-gray-600 text-justify\">\n                            Contracts are issued directly to <span className=\"select-all\">Evola Deliveries</span>.\n                            If you have any feedback please let us know!\n                        </p>\n                        <p>\n                            <span className=\"font-bold\">Notice:</span> Despite the initial low volume, we will attempt to keep all couriers under 48 hours.\n                        </p>\n                    </div>\n                    <hr />\n                    <h2 className=\"w-full font-bold text-xl\">Contract Creator</h2>\n                    <h3 className=\"w-full font-bold text-gl\">Select the Pickup and Dropoff stations</h3>\n                    <div className=\"flex justify-between\">\n                        <label htmlFor=\"outbound\">Pickup:</label>\n                        <select name=\"outbound\" defaultValue={outboundValue} onChange={handleOutboundChanged} >\n                            <option disabled hidden value=''></option>\n                            {DataService.routes.map(route => (\n                                <optgroup key={route.region} label={route.region}>\n                                    {route.systems.map(system => (\n                                        <option value={route.region + \"|\" + system.system}>{system.system}</option>\n                                    ))}\n                                </optgroup>\n                            ))}\n                        </select>\n                    </div>\n                    <div className='flex justify-between my-2 border-b-2 border-dashed border-green-700'>\n                        <div className=\"flex justify-start\">\n                            <label>Station (from):</label>\n                        </div>\n                        <div className=\"flex justify-end\">\n                            <span className=\"select-all cursor-pointer mx-2\" onClick={() => outboundRoute && UtilsService.clipboardCopy(outboundRoute.station)}>{outboundRoute && outboundRoute.station}</span>\n                            <FontAwesomeIcon className=\"cursor-pointer\" icon={faCopy} onClick={() => outboundRoute && UtilsService.clipboardCopy(outboundRoute.station)} />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <label htmlFor=\"inbound\">Dropoff:</label>\n                        <select name=\"inbound\" defaultValue=\"\" onChange={handleInboundChanged} >\n                            <option value=\"\">None</option>\n                            {DataService.getRoutes(outboundValue).map(route => (\n                                <optgroup key={route.region} label={route.region}>\n                                    {route.systems.map(system => (\n                                        <option value={route.region + \"|\" + system.system}>{system.system}</option>\n                                    ))}\n                                </optgroup>\n                            ))}\n                        </select>\n                    </div>\n                    <div className='flex justify-between my-2 border-b-2 border-dashed border-green-700'>\n                        <div className=\"flex justify-start\">\n                            <label>Station (from):</label>\n                        </div>\n                        <div className=\"flex justify-end\">\n                            <span className=\"select-all cursor-pointer mx-2\" onClick={() => inboundRoute && UtilsService.clipboardCopy(inboundRoute.station)}>{inboundRoute && inboundRoute.station}</span>\n                            <FontAwesomeIcon className=\"cursor-pointer\" icon={faCopy} onClick={() => inboundRoute && UtilsService.clipboardCopy(inboundRoute.station)} />\n                        </div>\n                    </div>\n                    <PackageDetails system={inboundRoute} onPricingChange={handlePricingChange} />\n                </div>\n            </div>\n            <div className=\"my-1 px-1 w-full overflow-hidden sm:my-1 sm:px-1 sm:w-1/2 md:my-1 md:px-1 md:w-1/2 lg:my-1 lg:px-1 lg:w-1/2 xl:my-1 xl:px-1 xl:w-1/2\">\n                <div className=\"flex justify-center w-full\">\n                    <OrderTicket outbound={outboundRoute} inbound={inboundRoute} pricing={pricing} />\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport ContractCreator from '../contract-creator';\n\n\nexport default function ContractsPage() {\n  return (\n    <ContractCreator />\n  );\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function NavigationBar() {\n    return (\n        <header className=\"px-4 py-4 bg-gray-600\">\n            <Link to=\"/\"><h1 className=\"text-white relative text-2xl font-bold font-sans italic leading-none text-left\">EVOLA <span className=\"text-red-500\">Deliveries</span></h1></Link>\n        </header>\n    );\n};","import React from 'react';\n\nexport default function FooterControl() {\n    return (\n        <footer>\n            <div className=\"px-4 py-4 bg-gray-600 text-white flex justify-center\">\n                <span className=\"font-bold\">Evola Deliveries</span>&nbsp;is a Eve Online Corporation\n            </div>\n        </footer>\n    );\n\n}","export default __webpack_public_path__ + \"static/media/not-found.4861ae77.svg\";","import React from 'react';\nimport NotFoundSvg from './not-found.svg';\nimport { Link } from 'react-router-dom';\n\nexport default function NoMatchPage() {\n    return (\n        <section>\n            <div className=\"text-white\">\n                <div className=\"flex\">\n                    <div className=\"m-auto text-center\">\n                        <div>\n                            <img src={NotFoundSvg} alt=\"404\"/>\n                        </div>\n                        <p className=\"text-sm md:text-base text-yellow-300 p-2 mb-4\">The stuff you were looking for doesn't exist\n                        </p>\n                        <Link to=\"/\" className=\"bg-transparent hover:bg-yellow-300 text-yellow-300 hover:text-white rounded shadow hover:shadow-lg py-2 px-4 border border-yellow-300 hover:border-transparent\">Home</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\n","import React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport ContractsPage from '../contracts-page';\nimport NavigationBar from '../nav-bar';\nimport FooterControl from '../footer-control';\nimport NoMatchPage from '../NoMatch-Page';\n\nconst MainPage = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"bg-cover flex flex-col min-h-screen\" style={\n\t\t\t\t{\n\t\t\t\t\t\"backgroundImage\": \"url(./background.png)\",\n\t\t\t\t\t\"backgroundPosition\": \"center\",\n\t\t\t\t\t\"backgroundRepeat\": \"repeat\",\n\t\t\t\t\t\"backgroundSize\": \"cover\"\n\t\t\t\t}}>\n\t\t\t\t<NavigationBar />\n\t\t\t\t<div className=\"flex-grow container mx-auto py-8 px-4 md:py-16 md:px-8\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<ContractsPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t<NoMatchPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t<FooterControl />\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default MainPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport MainPage from './components/main-page';\n\nReactDOM.render(\n  <React.StrictMode>\n      <MainPage/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}