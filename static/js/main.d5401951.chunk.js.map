{"version":3,"sources":["reportWebVitals.js","services/config-service/index.js","services/janice-service/index.js","components/package-details/index.js","services/utils-service/index.js","components/order-ticket/index.js","services/data-service/index.js","services/esi-service/index.js","components/contract-creator/index.js","components/contracts-page/index.js","components/nav-bar/index.js","components/footer-control/index.js","components/NoMatch-Page/not-found.svg","components/NoMatch-Page/index.js","components/main-page/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","evola_api_root_url","process","evola_api_url","discord_url","janice_url","esi_url","directus_url","service","getAppraisal","content","method","cache","mode","headers","redirect","referrerPolicy","body","fetch","Config","response","contentType","get","includes","TypeError","json","getTotalVolume","result","undefined","reduceRight","items","number","item","itemType","packagedVolume","amount","PackageDetails","system","onPricingChange","useState","setContent","errorMessage","setErrorMessage","success","setSuccess","overridePriceCheck","setOveridePriceCheck","overridePrice","setOveridePrice","overrideVolume","setOverideVolume","HandledAppraisal","length","effectivePrices","totalSellPrice","Janice","code","isDisabled","className","htmlFor","id","type","step","min","placeholder","value","onChange","event","val","parseFloat","target","isNaN","preventDefault","disabled","onClick","catch","reason","message","checked","clipboardCopy","text","navigator","clipboard","writeText","ContractCreator","outbound","inbound","pricing","rushFee","janice","href","rel","UtilsService","icon","faCopy","totals","volumeInvalid","Number","volume","toLocaleString","reward","collateral","minimumReward","limits","total","price","collateralInvalid","routes","Data","default","getRoutes","regionName","split","systemName","region","find","this","systems","regions","getInboundRoute","outboundRegionName","outboundSystemName","inboundRegionName","inboundSystemName","outboundRegion","outboundSystem","inboundRegion","getOutboundRoute","getContracts","calculatePricing","inboundRouteDeep","applyRushFee","volumeIsk","Math","ceil","collateralIsk","rush","setPricing","DataService","outboundValue","setOutboundValue","inboundValue","setInboundValue","inboundRoute","setInboundRoute","outboundRoute","setOutboundRoute","rushOrderCheck","setRushOrderCheck","outstandingContracts","setOutstandingContracts","progressContracts","setProgressContracts","HundredContracts","setLast100ContractTime","MJJitaHundredContracts","setLast100MJJitaContracts","rushAllowed","allowRush","useMemo","overrideRushFeeAmount","fees","rushFeeAmount","displayRushFee","useEffect","rushStillAllowed","shouldApplyRush","ContractService","r","Outstanding","InProgress","console","log","ConfigService","name","defaultValue","hidden","map","route","label","station","e","role","xmlns","viewBox","d","ContractsPage","NavigationBar","to","FooterControl","Date","getFullYear","NoMatchPage","src","NotFoundSvg","alt","MainPage","backgroundImage","setBackgroundImage","a","bgId","data","Background","error","fetchBackground","backgroundStyle","backgroundPosition","backgroundRepeat","backgroundSize","style","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5401951.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const config = {\n    evola_api_root_url: process.env.REACT_APP_EVOLA_API_ROOT,\n    evola_api_url: process.env.REACT_APP_EVOLA_API,\n    discord_url: process.env.REACT_APP_DISCORD_URL,\n    janice_url: process.env.REACT_APP_JANICE_URL,\n    esi_url: process.env.REACT_APP_ESI_API,\n    directus_url: process.env.REACT_APP_DIRECTUS_API\n}\n\nexport default config;","import { reduceRight } from 'lodash';\nimport Config from '../config-service';\n\nconst service = {\n    async getAppraisal(content = \"\") {\n        const config = {\n            method: 'POST',\n            cache: 'no-cache',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'text/plain',\n                'accept': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: content\n        };\n\n        return await fetch(Config.evola_api_url, config).then(response => {\n            const contentType = response.headers.get('content-type');\n            if (!contentType || !contentType.includes('application/json')) {\n                throw new TypeError(\"Oops, we haven't got JSON!\");\n            }\n            return response.json();\n        });\n    },\n    getTotalVolume(result) {\n        if (result === undefined) return;\n\n        return reduceRight(result.items, (number, item) => {\n            return number + (item.itemType.packagedVolume * item.amount);\n        }, 0);\n    }\n};\n\nexport default service;","import React, { useState } from 'react';\nimport Janice from '../../services/janice-service';\n\nexport default function PackageDetails({ system, onPricingChange }) {\n    const [content, setContent] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n    const [overridePriceCheck, setOveridePriceCheck] = useState(false);\n    const [overridePrice, setOveridePrice] = useState();\n    const [overrideVolume, setOverideVolume] = useState();\n\n    const handleOverridePriceCheck = () => {\n        setOveridePriceCheck(!overridePriceCheck);\n        setErrorMessage(\"\");\n        setSuccess(false);\n    };\n\n    const handleOverridePrice = event => {\n        let val = parseFloat(event.target.value, 10);\n        if (isNaN(val)) {\n            event.preventDefault();\n        } else {\n            // is A Number\n            if (val >= 0) {\n                setOveridePrice(val)\n            } else {\n                event.preventDefault();\n            }\n        }\n    };\n\n    const handleOverrideVolume = event => {\n        let val = parseFloat(event.target.value, 10);\n        if (isNaN(val)) {\n            event.preventDefault();\n        } else {\n            // is A Number\n            if (val >= 0) {\n                setOverideVolume(val);\n            } else {\n                event.preventDefault();\n            }\n        }\n    };\n\n    const handleContentChange = (event) => setContent(event.target.value);\n    const HandledAppraisal = (result) => {\n        if (result.items.length === 0) {\n            setErrorMessage(\"No Prices Found for items.\");\n            setSuccess(false);\n            return;\n        }\n\n        onPricingChange(result.effectivePrices.totalSellPrice, Janice.getTotalVolume(result), result.code);\n\n        setErrorMessage(\"\");\n        setSuccess(true);\n    };\n\n    const getJanicePrices = (event) => {\n        if (overridePriceCheck) {\n            onPricingChange(overridePrice, overrideVolume, '');\n            setErrorMessage(\"\");\n            setSuccess(true);\n            return;\n        }\n        if (content !== '' || content === undefined) {\n            Janice.getAppraisal(content)\n                .then(HandledAppraisal)\n                .catch((reason) => setErrorMessage(reason.message));\n        } else {\n            setSuccess(false);\n            setErrorMessage(\"Please enter at least one item to the package.\")\n        }\n    };\n\n    const isDisabled = () => system === undefined;\n\n    return (\n        <div className=\"mt-6\">\n            <h3 className=\"text-blue-400 font-bold text-lg leading-tight tracking-wide uppercase mb-1\">Package Details</h3>\n            <p className=\"text-sm text-gray-400 mb-3\">Select both pickup and dropoff routes to enable input area below.</p>\n\n            <div>\n                {overridePriceCheck ? (\n                    <div className=\"flex-wrap bg-gray-800 border-l-4 border-blue-600 rounded-md w-full px-6 py-4\">\n                        <div className=\"flex justify-between items-center mb-3 text-sm text-gray-300\">\n                            <label className=\"mr-2\" htmlFor=\"input-Isk\">Total Sell Price (ISK)</label>\n                            <input\n                                id=\"input-Isk\"\n                                type=\"number\"\n                                step=\"0.1\"\n                                min=\"0\"\n                                placeholder=\"0\"\n                                value={overridePrice}\n                                onChange={handleOverridePrice}\n                                className=\"bg-gray-900 text-white border border-gray-700 rounded px-2 py-1 w-1/2\"\n                            />\n                        </div>\n                        <div className=\"flex justify-between items-center text-sm text-gray-300\">\n                            <label className=\"mr-2\" htmlFor=\"input-volume\">Total Volume (m³)</label>\n                            <input\n                                id=\"input-volume\"\n                                type=\"number\"\n                                step=\"0.1\"\n                                min=\"0\"\n                                placeholder=\"0\"\n                                value={overrideVolume}\n                                onChange={handleOverrideVolume}\n                                className=\"bg-gray-900 text-white border border-gray-700 rounded px-2 py-1 w-1/2\"\n                            />\n                        </div>\n                    </div>\n                ) : (\n                    <textarea\n                        className=\"w-full rounded bg-gray-800 text-gray-200 border border-gray-700 px-4 py-2 disabled:opacity-50\"\n                        disabled={isDisabled()}\n                        onChange={handleContentChange}\n                        placeholder=\"Tritanium 1000 ...\"\n                    />\n                )}\n            </div>\n\n            <div className=\"flex items-center mt-4\">\n                <button\n                    className=\"bg-blue-600 disabled:bg-gray-600 text-white px-6 py-2 rounded font-medium hover:bg-blue-500 transition duration-200\"\n                    disabled={isDisabled()}\n                    onClick={getJanicePrices}\n                >\n                    Calculate Prices\n                </button>\n                <div className=\"pl-6\">\n                    <label className=\"flex items-center text-sm text-gray-300 cursor-pointer\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"form-check-input appearance-none border border-gray-600 rounded-sm bg-gray-800 checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 mr-2\"\n                            checked={overridePriceCheck}\n                            onChange={handleOverridePriceCheck}\n                            disabled={isDisabled()}\n                            id=\"overridePrice\"\n                        />\n                        Override Price\n                    </label>\n                </div>\n            </div>\n\n            {/* Error */}\n            {errorMessage && (\n                <div className=\"bg-red-900 border-l-4 border-red-600 my-3 rounded-md w-full px-6 py-4 text-red-300 text-sm\">\n                    {errorMessage}\n                    <br />\n                    You can override the price instead.\n                </div>\n            )}\n\n            {/* Success */}\n            {success && (\n                <div className=\"bg-green-900 border-l-4 border-green-600 my-3 rounded-md w-full px-6 py-4 text-green-300 text-sm\">\n                    <span className=\"font-semibold text-white\">Success!</span> See results on the <span className=\"font-bold text-blue-400\">Order Ticket</span> once you're ready.\n                    <br />\n                    <span className=\"italic\">Select and copy/paste</span> the <span className=\"font-bold text-yellow-300\">Station names, Total Reward, Total Collateral, and Janice reference</span> into your in-game contract.\n                </div>\n            )}\n        </div>\n\n    )\n}\n","const service = {\n    clipboardCopy(text) {\n        navigator.clipboard.writeText(text);\n    }\n};\n\nexport default service;","import React from 'react';\nimport Config from '../../services/config-service';\nimport UtilsService from '../../services/utils-service';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\n\nexport default function ContractCreator({ outbound, inbound, pricing, rushFee }) {\n    return (\n        <div className=\"py-8\">\n            <div className=\"p-4 border border-gray-700 font-mono w-full max-w-md bg-gray-900 rounded-lg shadow-lg text-gray-300 mx-auto\">\n\n                {/* Header */}\n                <div className=\"text-center\">\n                    <div className=\"text-2xl font-extrabold text-blue-400 tracking-wide\">EVOLA</div>\n                    <div className=\"text-2xl font-extrabold text-blue-400 tracking-wide mb-1\">DELIVERIES</div>\n                    <div className=\"text-xs uppercase text-gray-500 border-b border-gray-700 pb-1 mb-2\">Eve Online Corporation</div>\n                </div>\n\n                {/* Janice & Appraisal */}\n                <div className=\"text-xs\">\n                    <div className=\"flex justify-between items-center mb-1\">\n                        <span className=\"font-semibold text-gray-400\">Package Details</span>\n                        {pricing?.janice && (\n                            <a\n                                href={Config.janice_url + pricing.janice}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className=\"text-purple-400 hover:underline\"\n                            >\n                                Janice {pricing.janice}\n                            </a>\n                        )}\n                    </div>\n                    <hr className=\"border-gray-700 mb-2\" />\n\n                    <div className=\"flex justify-between items-center mb-1\">\n                        <span\n                            className=\"italic cursor-pointer pl-1 hover:text-white\"\n                            onClick={() => UtilsService.clipboardCopy(pricing?.janice || \"\")}\n                        >\n                            Appraisal Ref <FontAwesomeIcon icon={faCopy} className=\"ml-1\" />\n                        </span>\n                        <span className=\"select-all\">{pricing?.janice}</span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center mb-1\">\n                        <span className=\"pl-1 italic\">Cubic Meters</span>\n                        <span\n                            className={`font-bold ${pricing?.totals.volumeInvalid ? \"text-red-500\" : \"text-green-400\"\n                                }`}\n                        >\n                            {pricing && Number(pricing.volume).toLocaleString(\"en\")} m³\n                        </span>\n                    </div>\n\n                    {/* Pricing */}\n                    <div className=\"mt-2 mb-1 font-semibold text-gray-400\">Pricing</div>\n                    <hr className=\"border-gray-700 mb-1\" />\n\n                    <div className=\"flex justify-between text-sm mb-1\">\n                        <span className=\"pl-1\">Volume</span>\n                        <span className={pricing?.totals.volumeInvalid ? \"text-red-500 font-bold\" : \"\"}>\n                            {inbound && Number(inbound.reward.volume).toLocaleString(\"en\")} m³\n                        </span>\n                    </div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                        <span className=\"pl-1\">Collateral</span>\n                        <span>{inbound && Number(inbound.reward.collateral).toLocaleString(\"en\")}%</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                        <span className=\"pl-1\">Rush Delivery</span>\n                        <span>{inbound && Number(rushFee).toLocaleString(\"en\")} ISK</span>\n                    </div>\n\n                    {/* Limits */}\n                    <div className=\"mt-2 mb-1 font-semibold text-gray-400\">Limits</div>\n                    <hr className=\"border-gray-700 mb-1\" />\n                    <div className=\"flex justify-between text-sm mb-1\">\n                        <span className=\"pl-1\">Min Reward</span>\n                        <span className=\"select-all\">{inbound && Number(inbound.minimumReward).toLocaleString(\"en\")} ISK</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                        <span className=\"pl-1\">Max Volume</span>\n                        <span className=\"select-all\">{inbound && Number(inbound.limits.volume).toLocaleString(\"en\")} m³</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm mb-2\">\n                        <span className=\"pl-1\">Max Collateral</span>\n                        <span className=\"select-all\">{inbound && Number(inbound.limits.collateral).toLocaleString(\"en\")} ISK</span>\n                    </div>\n\n                    {/* Totals */}\n                    <hr className=\"border-gray-700 mb-1\" />\n                    <div className=\"flex justify-between items-center mb-1\">\n                        <span\n                            className=\"font-semibold cursor-pointer hover:text-white\"\n                            onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.totals.total).toLocaleString(\"en\"))}\n                        >\n                            Total Reward <FontAwesomeIcon icon={faCopy} className=\"ml-1\" />\n                        </span>\n                        <span className=\"font-bold text-green-400 select-all\">\n                            {pricing && Number(pricing.totals.total).toLocaleString(\"en\")} ISK\n                        </span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center\">\n                        <span\n                            className=\"font-semibold cursor-pointer hover:text-white\"\n                            onClick={() => UtilsService.clipboardCopy(pricing && Number(pricing.price).toLocaleString(\"en\"))}\n                        >\n                            Total Collateral <FontAwesomeIcon icon={faCopy} className=\"ml-1\" />\n                        </span>\n                        <span\n                            className={`font-bold select-all ${pricing?.totals.collateralInvalid ? \"text-red-500\" : \"text-green-400\"\n                                }`}\n                        >\n                            {pricing && Number(pricing.price).toLocaleString(\"en\")} ISK\n                        </span>\n                    </div>\n                </div>\n\n                {/* Footer */}\n                <div className=\"border-t border-gray-700 mt-4 pt-2 text-xs text-gray-500 leading-snug\">\n                    <p>\n                        Contracts issued to:{\" \"}\n                        <span\n                            className=\"text-white font-bold cursor-pointer select-all\"\n                            onClick={() => UtilsService.clipboardCopy(\"Evola Deliveries\")}\n                        >\n                            Evola Deliveries\n                        </span>{\" \"}\n                        <FontAwesomeIcon icon={faCopy} className=\"cursor-pointer ml-1\" />\n                    </p>\n                    <p className=\"mt-2 text-red-400 font-semibold\">No Containers!</p>\n                    <p className=\"text-red-400 font-semibold\">No Assembled Ships!</p>\n                    <p className=\"text-yellow-400 font-semibold\">Expiration: 7 Days</p>\n                    <p className=\"text-yellow-400 font-semibold\">Days to Complete: 7</p>\n                    <p className=\"mt-2\">Feedback? Contact <span className=\"text-blue-400 font-semibold\">Nahtsu</span></p>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n","import Data from './data.json';\nimport { find } from 'lodash';\n\nconst service = {\n    routes: Data.routes,\n    default: Data.default,\n    getRoutes(outbound) {\n        const regionName = outbound.split('|')[0];\n        const systemName = outbound.split('|')[1];\n    \n        const region = find(this.routes, (value) => value.region === regionName);\n        const system = find(region.systems, (value) => value.system === systemName);\n    \n        return system.regions;\n    },\n    getInboundRoute(outbound, inbound) {\n        if (outbound === \"\" || outbound === undefined) return;\n        if (inbound === \"\" || inbound === undefined) return;\n\n        const outboundRegionName = outbound.split('|')[0];\n        const outboundSystemName = outbound.split('|')[1];\n\n        const inboundRegionName = inbound.split('|')[0];\n        const inboundSystemName = inbound.split('|')[1];\n    \n        const outboundRegion = find(this.routes, (value) => value.region === outboundRegionName);\n        const outboundSystem = find(outboundRegion.systems, (value) => value.system === outboundSystemName);\n\n        const inboundRegion = find(outboundSystem.regions, (value) => value.region === inboundRegionName);\n\n        if(!inboundRegion) return;\n\n        const inboundSystem = find(inboundRegion.systems, (value) => value.system === inboundSystemName);\n\n        return inboundSystem;\n    },\n    getOutboundRoute(outbound) {\n        const regionName = outbound.split('|')[0];\n        const systemName = outbound.split('|')[1];\n    \n        const region = find(this.routes, (value) => value.region === regionName);\n        const system = find(region.systems, (value) => value.system === systemName);\n    \n        return system;\n    }\n};\n\nexport default service;","import Config from '../config-service';\n\nconst service = {\n    async getContracts(content = \"\") {\n        const config = {\n            method: 'GET',\n            cache: 'no-cache',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'text/plain',\n                'accept': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n        };\n\n        return await fetch(Config.esi_url, config).then(response => {\n            return response.json();\n        });\n    },\n};\n\nexport default service;","import React, { useEffect, useState, useMemo } from 'react';\nimport PackageDetails from '../package-details';\nimport OrderTicket from '../order-ticket';\nimport DataService from '../../services/data-service';\nimport ConfigService from '../../services/config-service';\nimport ContractService from \"../../services/esi-service\";\nimport UtilsService from \"../../services/utils-service\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\n\nfunction calculatePricing(inboundRouteDeep, price, volume, janice, rushFee = 0, applyRushFee = false) {\n    const volumeIsk = inboundRouteDeep ? Math.ceil(volume * inboundRouteDeep.reward.volume) : 0;\n    const collateralIsk = inboundRouteDeep ? Math.ceil((price / 100) * inboundRouteDeep.reward.collateral) : 0;\n    const volumeInvalid = inboundRouteDeep ? inboundRouteDeep.limits.volume < volume : false;\n    const collateralInvalid = inboundRouteDeep ? inboundRouteDeep.limits.collateral < price : false;\n    let total = volumeIsk + collateralIsk;\n\n    if (inboundRouteDeep && total < inboundRouteDeep.minimumReward) {\n        total = inboundRouteDeep.minimumReward;\n    }\n\n    if (applyRushFee) {\n        total += rushFee;\n    }\n\n    return {\n        price: price,\n        volume: volume,\n        janice: janice,\n        totals: {\n            volumeInvalid: volumeInvalid,\n            collateralInvalid: collateralInvalid,\n            volume: volumeIsk,\n            collateral: collateralIsk,\n            rush: applyRushFee ? rushFee : 0,\n            total: total\n        }\n    };\n}\n\nexport default function ContractCreator() {\n    const [pricing, setPricing] = useState(calculatePricing(null, 0, 0, \"\"));\n    const [outboundValue, setOutboundValue] = useState(DataService.default.region + \"|\" + DataService.default.system);\n    const [inboundValue, setInboundValue] = useState(\"\");\n    const [inboundRoute, setInboundRoute] = useState();\n    const [outboundRoute, setOutboundRoute] = useState();\n    const [rushOrderCheck, setRushOrderCheck] = useState(false);\n    const [outstandingContracts, setOutstandingContracts] = useState();\n    const [progressContracts, setProgressContracts] = useState();\n    const [HundredContracts, setLast100ContractTime] = useState();\n    const [MJJitaHundredContracts, setLast100MJJitaContracts] = useState();\n\n    const rushAllowed = inboundRoute?.allowRush === true;\n\n    const rushFee = useMemo(() => {\n        return inboundRoute?.overrideRushFeeAmount ?? DataService.default.fees.rushFeeAmount;\n    }, [inboundRoute]);\n\n    const displayRushFee = rushFee;\n\n    useEffect(() => {\n        setOutboundRoute(DataService.getOutboundRoute(outboundValue));\n    }, [outboundValue]);\n\n    useEffect(() => {\n        setInboundRoute(DataService.getInboundRoute(outboundValue, inboundValue));\n    }, [inboundValue, outboundValue]);\n\n    useEffect(() => {\n        setPricing(calculatePricing(\n            inboundRoute,\n            pricing.price,\n            pricing.volume,\n            pricing.janice,\n            rushFee,\n            rushOrderCheck && rushAllowed\n        ));\n    }, [\n        inboundRoute,\n        pricing.price,\n        pricing.volume,\n        pricing.janice,\n        rushFee,\n        rushOrderCheck,\n        rushAllowed\n    ]);\n\n    useEffect(() => {\n        const rushStillAllowed = inboundRoute?.allowRush === true;\n        const shouldApplyRush = rushOrderCheck && rushStillAllowed;\n\n        if (!rushStillAllowed && rushOrderCheck) {\n            setRushOrderCheck(false);\n        }\n\n        setPricing(calculatePricing(\n            inboundRoute,\n            pricing.price,\n            pricing.volume,\n            pricing.janice,\n            rushFee,\n            shouldApplyRush\n        ));\n    }, [\n        outboundRoute,\n        inboundRoute,\n        pricing.price,\n        pricing.volume,\n        pricing.janice,\n        rushFee,\n        rushOrderCheck\n    ]);\n\n    const handleOutboundChanged = (event) => setOutboundValue(event.target.value);\n    const handleInboundChanged = (event) => setInboundValue(event.target.value);\n\n    const handlePricingChange = (price, volume, janice) => {\n        setPricing(calculatePricing(\n            inboundRoute,\n            price,\n            volume,\n            janice,\n            rushFee,\n            rushOrderCheck && rushAllowed\n        ));\n    };\n\n    useEffect(() => {\n        ContractService.getContracts().then(r => {\n            setOutstandingContracts(r.Outstanding);\n            setProgressContracts(r.InProgress);\n            setLast100ContractTime(r.HundredContracts);\n            setLast100MJJitaContracts(r.MJJitaHundredContracts);\n        }).catch(console.log);\n    }, []);\n\n    return (\n        <div className=\"flex flex-wrap -mx-1 overflow-hidden sm:-mx-1 md:-mx-1 lg:-mx-1 xl:-mx-1\">\n            <div className=\"my-1 px-1 w-full overflow-hidden sm:my-1 sm:px-1 sm:w-1/2 md:my-1 md:px-1 md:w-1/2 lg:my-1 lg:px-1 lg:w-1/2 xl:my-1 xl:px-1 xl:w-1/2\">\n                <div className=\"shadow-lg rounded-lg bg-gray-900 border border-gray-700 px-4 py-3\">\n                    <div className=\"my-2 text-gray-300 text-sm\">\n                        <div className=\"bg-gray-900 text-white p-6 rounded-lg shadow-lg border border-gray-700\">\n                            <div className=\"headerCont text-center md:text-left\">\n                                <h4 className=\"uppercase tracking-widest text-sm text-gray-400 mb-1 md:block\">Welcome to</h4>\n                                <h3 className=\"font-extrabold text-3xl md:text-4xl text-blue-400 md:block\">EVOLA DELIVERIES</h3>\n\n                                <a\n                                    className=\"inline-flex items-center mt-4 text-lg text-blue-500 hover:text-blue-300 focus:text-blue-300 transition-colors duration-200\"\n                                    href={ConfigService.discord_url}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    <span className=\"uppercase font-medium tracking-wide\">Join Discord</span>\n                                    <span className=\"text-xl ml-2 animate-pulse\">&#x279c;</span>\n                                </a>\n                            </div>\n                        </div>\n                        <div className=\"max-w-5xl mx-auto p-4\">\n                            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n\n                                {/* Box 1: Task Overview */}\n                                <div className=\"bg-gray-900 border border-gray-700 rounded-lg p-6 text-center shadow-lg\">\n                                    <h2 className=\"text-sm uppercase text-gray-400 tracking-widest mb-2\">Task Status</h2>\n                                    <p className=\"text-3xl font-extrabold text-green-400\">{outstandingContracts}</p>\n                                    <p className=\"text-xs text-gray-500 mt-1\">Outstanding</p>\n                                    <p className=\"text-2xl font-bold text-yellow-400 mt-4\">{progressContracts}</p>\n                                    <p className=\"text-xs text-gray-500\">In Progress</p>\n                                </div>\n\n                                {/* Box 2: Contract Time */}\n                                <div className=\"bg-gray-900 border border-gray-700 rounded-lg p-6 text-center shadow-lg\">\n                                    <h2 className=\"text-sm uppercase text-gray-400 tracking-widest mb-2\">Avg Contract Time</h2>\n                                    <p className=\"text-4xl font-extrabold text-blue-400\">{HundredContracts}h</p>\n                                    <p className=\"text-xs text-gray-500 mt-1\">Hours per Contract</p>\n                                </div>\n\n                                {/* Box 3: MJ to Jita */}\n                                <div className=\"bg-gray-900 border border-gray-700 rounded-lg p-6 text-center shadow-lg\">\n                                    <h2 className=\"text-sm uppercase text-gray-400 tracking-widest mb-2\">MJ ↔ Jita Travel</h2>\n                                    <p className=\"text-4xl font-extrabold text-purple-400\">{MJJitaHundredContracts}h</p>\n                                    <p className=\"text-xs text-gray-500 mt-1\">Journey Duration</p>\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <h2 className=\"w-full text-xl text-blue-400 font-bold uppercase tracking-wider mb-1\">Contract Creator</h2>\n                    <h3 className=\"w-full text-gray-400 font-medium text-sm mb-4\">Select the Pickup and Dropoff stations</h3>\n                    <div className=\"flex justify-between items-center text-sm text-gray-300 mb-2\">\n                        <label htmlFor=\"outbound\" className=\"mr-2\">Pickup:</label>\n                        <select\n                            name=\"outbound\"\n                            defaultValue={outboundValue}\n                            onChange={handleOutboundChanged}\n                            className=\"bg-gray-800 border border-gray-600 text-gray-200 px-3 py-1 rounded w-2/3\"\n                        >\n                            <option disabled hidden value=''></option>\n                            {DataService.routes.map(route => (\n                                <optgroup key={route.region} label={route.region}>\n                                    {route.systems.map(system => (\n                                        <option key={`${route.region}-${system.system}`} value={route.region + \"|\" + system.system}>\n                                            {system.system}\n                                        </option>\n                                    ))}\n                                </optgroup>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div className=\"flex justify-between items-center my-2 border-b border-dashed border-blue-700 pb-1 text-sm text-gray-400\">\n                        <div>Station (from):</div>\n                        <div className=\"flex items-center space-x-2\">\n                            <span className=\"cursor-pointer hover:text-white\" onClick={() => outboundRoute && UtilsService.clipboardCopy(outboundRoute.station)}>\n                                {outboundRoute && outboundRoute.station}\n                            </span>\n                            <FontAwesomeIcon className=\"cursor-pointer text-blue-500 hover:text-blue-300\" icon={faCopy} onClick={() => outboundRoute && UtilsService.clipboardCopy(outboundRoute.station)} />\n                        </div>\n                    </div>\n\n                    <div className=\"flex justify-between items-center text-sm text-gray-300 mb-2\">\n                        <label htmlFor=\"inbound\" className=\"mr-2\">Dropoff:</label>\n                        <select\n                            name=\"inbound\"\n                            defaultValue=\"\"\n                            onChange={handleInboundChanged}\n                            className=\"bg-gray-800 border border-gray-600 text-gray-200 px-3 py-1 rounded w-2/3\"\n                        >\n                            <option value=\"\">None</option>\n                            {DataService.getRoutes(outboundValue).map(route => (\n                                <optgroup key={route.region} label={route.region}>\n                                    {route.systems.map(system => (\n                                        <option key={`${route.region}-${system.system}`} value={route.region + \"|\" + system.system}>\n                                            {system.system}\n                                        </option>\n                                    ))}\n                                </optgroup>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div className=\"flex justify-between items-center my-2 border-b border-dashed border-purple-700 pb-1 text-sm text-gray-400\">\n                        <div>Station (to):</div>\n                        <div className=\"flex items-center space-x-2\">\n                            <span className=\"cursor-pointer hover:text-white\" onClick={() => inboundRoute && UtilsService.clipboardCopy(inboundRoute.station)}>\n                                {inboundRoute && inboundRoute.station}\n                            </span>\n                            <FontAwesomeIcon className=\"cursor-pointer text-purple-500 hover:text-purple-300\" icon={faCopy} onClick={() => inboundRoute && UtilsService.clipboardCopy(inboundRoute.station)} />\n                        </div>\n                    </div>\n\n                    <div className=\"mb-4 mt-3\">\n                        <label className=\"flex items-center text-sm text-gray-300\">\n                            <input\n                                type=\"checkbox\"\n                                className=\"form-check-input appearance-none border border-gray-500 rounded-sm bg-gray-800 checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 mr-2 cursor-pointer\"\n                                checked={rushOrderCheck}\n                                onChange={(e) => setRushOrderCheck(e.target.checked)}\n                                disabled={!rushAllowed}\n                                id=\"rushOrderTop\"\n                            />\n                            <span className={`font-semibold ${!rushAllowed ? 'opacity-50 text-gray-500' : 'text-blue-400'}`}>\n                                Request Rush Delivery\n                            </span>\n                        </label>\n                        <div className={`text-xs mt-1 ml-6 leading-snug ${!rushAllowed ? 'text-gray-500' : 'text-gray-400'}`}>\n                            +<span className=\"font-bold text-green-400\">{displayRushFee.toLocaleString()}</span> ISK flat fee — <span className=\"font-semibold text-yellow-300\">Guaranteed Priority</span><br />\n                            <span className=\"italic text-gray-500\">Delivery within 24h or placed top of queue. Marked as <span className=\"text-blue-500\">priority</span>.</span>\n                        </div>\n                    </div>\n\n                    <PackageDetails system={inboundRoute} onPricingChange={handlePricingChange} />\n\n                    <div className=\"bg-gray-800 border-l-4 border-blue-600 rounded-md text-blue-300 px-4 py-3 shadow-md mt-4\" role=\"alert\">\n                        <div className=\"flex\">\n                            <div className=\"py-1\">\n                                <svg className=\"fill-current h-6 w-6 text-blue-500 mr-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                    <path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\n                                </svg>\n                            </div>\n                            <div>\n                                <p className=\"font-bold text-white\">Informational Notice</p>\n                                <p className=\"text-sm\">Contracts are issued to <span className=\"select-all text-blue-400\">Evola Deliveries</span>. Feedback is welcome!</p>\n                                <p><span className=\"font-bold text-yellow-400\">Note:</span> Though volumes are low, our goal is delivery within 48 hours.</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <div className=\"my-1 px-1 w-full overflow-hidden sm:w-1/2\">\n                <div className=\"flex justify-center w-full p-4\">\n                    <OrderTicket\n                        outbound={outboundRoute}\n                        inbound={inboundRoute}\n                        pricing={pricing}\n                        rushFee={rushOrderCheck && rushAllowed ? rushFee : 0}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport ContractCreator from '../contract-creator';\n\n\nexport default function ContractsPage() {\n  return (\n    <ContractCreator />\n  );\n};","import React from 'react';\nimport ConfigService from '../../services/config-service';\nimport { Link } from 'react-router-dom';\n\nexport default function NavigationBar() {\n    return (\n        <header className=\"bg-gray-900 border-b border-gray-700 shadow-md\">\n            <div className=\"max-w-7xl mx-auto flex items-center justify-between px-6 py-4\">\n\n                {/* Logo */}\n                <Link to=\"/\" className=\"flex items-center space-x-2 group\">\n                    <h1 className=\"text-2xl font-extrabold text-blue-400 tracking-wide font-mono group-hover:text-white transition duration-150\">\n                        EVOLA <span className=\"text-red-500\">Deliveries</span>\n                    </h1>\n                </Link>\n                \n\n                {/* Navigation (optional links - placeholder) */}\n                <nav className=\"hidden md:flex space-x-6 text-sm font-medium text-gray-400\">\n                    <Link to=\"/\" className=\"hover:text-white transition duration-150\">Contracts</Link>\n                    <a\n                        href={ConfigService.discord_url}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className=\"text-blue-500 hover:text-blue-300 transition duration-150\"\n                    >\n                        Join Discord\n                    </a>\n                </nav>\n            </div>\n        </header>\n    );\n};","import React from 'react';\n\nexport default function FooterControl() {\n    return (\n        <footer className=\"bg-gray-900 border-t border-gray-700 mt-12\">\n            <div className=\"max-w-7xl mx-auto px-4 py-6 text-center text-sm text-gray-400 font-mono tracking-wide\">\n                <p className=\"uppercase text-blue-400 font-semibold text-xs\">Evola Deliveries</p>\n                <p className=\"text-gray-500 mt-1\">An Eve Online Corporation — Serving Capsuleers Across New Eden</p>\n                <div className=\"mt-2 text-xs text-gray-600 italic\">\n                    © YC<span className=\"select-none\">{new Date().getFullYear() - 1898}</span> – Fly safe, pilot o7\n                </div>\n            </div>\n        </footer>\n    );\n}","export default __webpack_public_path__ + \"static/media/not-found.4861ae77.svg\";","import React from 'react';\nimport NotFoundSvg from './not-found.svg';\nimport { Link } from 'react-router-dom';\n\nexport default function NoMatchPage() {\n    return (\n        <section className=\"min-h-screen bg-gray-950 text-gray-300 px-4 pt-16 md:pt-24\">\n            <div className=\"w-full max-w-5xl mx-auto text-center py-12 px-8 border border-gray-700 rounded-2xl shadow-2xl bg-gray-900 bg-opacity-90 backdrop-blur-sm\">\n\n                {/* Visual Signal */}\n                <img src={NotFoundSvg} alt=\"404 - Not Found\" className=\"mx-auto w-64 md:w-80 lg:w-96 opacity-95 mb-10 animate-pulse\" />\n\n                {/* Massive Error Signal */}\n                <p className=\"text-xl md:text-2xl text-yellow-300 italic mb-8\">\n                    Signal Lost — No Structure Detected\n                </p>\n\n                {/* Detail */}\n                <p className=\"text-md md:text-lg text-gray-400 max-w-3xl mx-auto mb-12 leading-relaxed\">\n                    You’ve warped to an empty grid, capsuleer. <br />\n                    No station registered at this coordinate. Check your navigation link or return to HQ.\n                </p>\n\n                {/* Button */}\n                <Link\n                    to=\"/\"\n                    className=\"inline-block text-lg font-semibold bg-transparent hover:bg-yellow-300 text-yellow-300 hover:text-gray-900 border border-yellow-300 hover:border-transparent px-8 py-4 rounded-lg transition duration-200 shadow-md hover:shadow-xl\"\n                >\n                    Return to HQ\n                </Link>\n\n            </div>\n        </section>\n    );\n};\n\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport Config from '../../services/config-service';\nimport ContractsPage from '../contracts-page';\nimport NavigationBar from '../nav-bar';\nimport FooterControl from '../footer-control';\nimport NoMatchPage from '../NoMatch-Page';\n\n\n\nconst MainPage = () => {\n\tconst [backgroundImage, setBackgroundImage] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst fetchBackground = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`${Config.evola_api_root_url}/content-global`);\n\t\t\t\tconst json = await response.json();\n\t\t\t\tconst bgId = json?.data?.Background;\n\n\t\t\t\tif (bgId) {\n\t\t\t\t\tsetBackgroundImage(`${Config.evola_api_root_url}/assets/${bgId}`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to fetch background:', error);\n\t\t\t}\n\t\t};\n\n\t\tfetchBackground();\n\t}, []);\n\n\tconst backgroundStyle = {\n\t\tbackgroundImage: `\n    radial-gradient(ellipse at center, rgba(50, 50, 50, 0.6) 0%, rgba(10, 10, 10, 0.8) 100%),\n    url(${backgroundImage ? backgroundImage : './background.png'})\n  `,\n\t\tbackgroundPosition: 'center',\n\t\tbackgroundRepeat: 'repeat',\n\t\tbackgroundSize: 'cover',\n\t};\n\n\n\treturn (\n\t\t<Router>\n\t\t\t<div\n\t\t\t\tclassName=\"flex flex-col min-h-screen text-gray-300 font-sans\"\n\t\t\t\tstyle={backgroundStyle}\n\t\t\t>\n\t\t\t\t{/* Navigation */}\n\t\t\t\t<NavigationBar />\n\n\t\t\t\t{/* Main Content */}\n\t\t\t\t<main className=\"flex-grow px-4 md:px-8 py-8 md:py-16 max-w-7xl mx-auto w-full\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<ContractsPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t<NoMatchPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\n\t\t\t\t{/* Footer */}\n\t\t\t\t<FooterControl />\n\t\t\t</div>\n\t\t</Router>\n\n\t);\n}\n\nexport default MainPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport MainPage from './components/main-page';\n\nReactDOM.render(\n  <React.StrictMode>\n      <MainPage/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}