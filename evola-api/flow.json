[
    {
        "id": "85d09905.9710c8",
        "type": "tab",
        "label": "Website",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0ccd8135b6f8eaf1",
        "type": "tab",
        "label": "API",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1344ff94c1358bb3",
        "type": "tab",
        "label": "Calculator",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b0a467b42952d9b8",
        "type": "tab",
        "label": "ESI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "707f7b126e9f5ec3",
        "type": "http in",
        "z": "85d09905.9710c8",
        "name": "",
        "url": "/content-global",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "8ce30326de02b0bc"
            ]
        ]
    },
    {
        "id": "758db48d7b47ec01",
        "type": "http request",
        "z": "85d09905.9710c8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://directus:8055/items/Globals",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 180,
        "wires": [
            [
                "c47cc725fc143d54"
            ]
        ]
    },
    {
        "id": "8ce30326de02b0bc",
        "type": "function",
        "z": "85d09905.9710c8",
        "name": "Bearer Token",
        "func": "msg.headers = { \n    Authorization: `Bearer ${global.get(\"DIRECTUS_TOKEN\") }`\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "758db48d7b47ec01"
            ]
        ]
    },
    {
        "id": "c47cc725fc143d54",
        "type": "http response",
        "z": "85d09905.9710c8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 180,
        "wires": []
    },
    {
        "id": "70cc2683.ee42c",
        "type": "http response",
        "z": "0ccd8135b6f8eaf1",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 620,
        "y": 120,
        "wires": []
    },
    {
        "id": "2ada2d01.d4849a",
        "type": "http in",
        "z": "0ccd8135b6f8eaf1",
        "name": "root",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "76014038.01f728"
            ]
        ]
    },
    {
        "id": "76014038.01f728",
        "type": "function",
        "z": "0ccd8135b6f8eaf1",
        "name": "body",
        "func": "msg.payload = { message: \"evola api\" }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 120,
        "wires": [
            [
                "70cc2683.ee42c"
            ]
        ]
    },
    {
        "id": "deed2557d083e3f9",
        "type": "http in",
        "z": "1344ff94c1358bb3",
        "name": "",
        "url": "/routes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "d7e1430948dd9e0d"
            ]
        ]
    },
    {
        "id": "c982a84091b031cf",
        "type": "http request",
        "z": "1344ff94c1358bb3",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://directus:8055/items/Routes?fields=*.*.*.*",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 140,
        "wires": [
            [
                "3d3b5b26e28e9098"
            ]
        ]
    },
    {
        "id": "b2af9774874e7029",
        "type": "http response",
        "z": "1344ff94c1358bb3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1430,
        "y": 140,
        "wires": []
    },
    {
        "id": "d7e1430948dd9e0d",
        "type": "function",
        "z": "1344ff94c1358bb3",
        "name": "Bearer Token",
        "func": "msg.headers = { \n    Authorization: `Bearer ${global.get(\"DIRECTUS_TOKEN\") }`\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 140,
        "wires": [
            [
                "c982a84091b031cf"
            ]
        ]
    },
    {
        "id": "37dd45b425d8a63e",
        "type": "http request",
        "z": "1344ff94c1358bb3",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://directus:8055/items/Defaults?fields=*.*.*.*",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "6ea26428eacc31ec"
            ]
        ]
    },
    {
        "id": "50c50fb324ba0674",
        "type": "function",
        "z": "1344ff94c1358bb3",
        "name": "Bearer Token",
        "func": "msg.headers = { \n    Authorization: `Bearer ${global.get(\"DIRECTUS_TOKEN\") }`\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 140,
        "wires": [
            [
                "37dd45b425d8a63e"
            ]
        ]
    },
    {
        "id": "3d3b5b26e28e9098",
        "type": "function",
        "z": "1344ff94c1358bb3",
        "name": "transform",
        "func": "function transformData(oldData) {\n    const newData = {\n        routes: []\n    };\n\n    const regionMap = new Map();\n\n    oldData.data.forEach(route => {\n        const fromRegionName = route.From_Station.System.Region.Region;\n        const fromSystemName = route.From_Station.System.System;\n        const fromStationName = route.From_Station.Station;\n\n        const toRegionName = route.To_Station.System.Region.Region;\n        const toSystemName = route.To_Station.System.System;\n        const toStationName = route.To_Station.Station;\n\n        const pricing = route.Pricing;\n        const allowRush = route.AllowRush;\n\n        const reward = pricing.Reward;\n        const limits = pricing.Limit;\n\n        const targetStation = {\n            system: toSystemName,\n            station: toStationName,\n            reward: {\n                volume: parseFloat(reward.Volume),\n                collateral: parseFloat(reward.Collateral)\n            },\n            limits: {\n                volume: parseFloat(limits.Volume),\n                collateral: parseFloat(limits.Collateral)\n            },\n            minimumReward: parseInt(reward.Minimum, 10),\n            allowRush: allowRush\n        };\n\n        // Handle region mapping\n        if (!regionMap.has(fromRegionName)) {\n            regionMap.set(fromRegionName, { region: fromRegionName, systems: new Map() });\n        }\n\n        const fromRegion = regionMap.get(fromRegionName);\n\n        if (!fromRegion.systems.has(fromSystemName)) {\n            fromRegion.systems.set(fromSystemName, {\n                system: fromSystemName,\n                station: fromStationName,\n                regions: new Map()\n            });\n        }\n\n        const fromSystem = fromRegion.systems.get(fromSystemName);\n\n        if (!fromSystem.regions.has(toRegionName)) {\n            fromSystem.regions.set(toRegionName, {\n                region: toRegionName,\n                systems: []\n            });\n        }\n\n        const toRegion = fromSystem.regions.get(toRegionName);\n        toRegion.systems.push(targetStation);\n    });\n\n    // Build final structure\n    regionMap.forEach(region => {\n        const regionEntry = {\n            region: region.region,\n            systems: []\n        };\n\n        region.systems.forEach(system => {\n            const systemEntry = {\n                system: system.system,\n                station: system.station,\n                regions: []\n            };\n\n            system.regions.forEach(subRegion => {\n                systemEntry.regions.push({\n                    region: subRegion.region,\n                    systems: subRegion.systems\n                });\n            });\n\n            regionEntry.systems.push(systemEntry);\n        });\n\n        newData.routes.push(regionEntry);\n    });\n\n    return newData;\n}\n\nmsg.data = transformData(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 140,
        "wires": [
            [
                "50c50fb324ba0674"
            ]
        ]
    },
    {
        "id": "6ea26428eacc31ec",
        "type": "function",
        "z": "1344ff94c1358bb3",
        "name": "transform",
        "func": "msg.data.default = {\n    region: msg.payload.data.Default_System.Region.Region,\n    system: msg.payload.data.Default_System.System,\n    fees: {\n        rushFeeAmount: parseFloat(msg.payload.data.RushDeliveryAmount)\n    }\n};\n\n// Construct payload with default at the top, followed by the rest\nmsg.payload = {\n    default: msg.data.default,\n    routes: msg.data.routes\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 140,
        "wires": [
            [
                "b2af9774874e7029"
            ]
        ]
    },
    {
        "id": "6d76d60c.549438",
        "type": "http in",
        "z": "1344ff94c1358bb3",
        "name": "getAppraisal",
        "url": "/getAppraisal",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "413d0ea6.7b2ce8"
            ]
        ]
    },
    {
        "id": "87fe4b9d.1712",
        "type": "http request",
        "z": "1344ff94c1358bb3",
        "name": "janice",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://janice.e-351.com/api/rest/v2/appraisal?market=2&designation=appraisal&pricing=split&pricingVariant=immediate&persist=true&compactize=true&pricePercentage=1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "22bac43090a6d812"
            ]
        ]
    },
    {
        "id": "413d0ea6.7b2ce8",
        "type": "function",
        "z": "1344ff94c1358bb3",
        "name": "headers",
        "func": "const options = {\n  'X-ApiKey': global.get(\"APIKEY\"),\n  'Content-Type': 'text/plain',\n  'Accept': 'application/json' \n}\nmsg.headers = options;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 240,
        "wires": [
            [
                "87fe4b9d.1712"
            ]
        ]
    },
    {
        "id": "22bac43090a6d812",
        "type": "http response",
        "z": "1344ff94c1358bb3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "6ad893986c109683",
        "type": "function",
        "z": "b0a467b42952d9b8",
        "name": "setGlobals",
        "func": "msg.page = 1\nmsg.contracts = []\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 180,
        "wires": [
            [
                "46a9940b002fe417"
            ]
        ]
    },
    {
        "id": "84e034956fded3c5",
        "type": "http request",
        "z": "b0a467b42952d9b8",
        "name": "getContracts",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://esi.evetech.net/latest/corporations/98684131/contracts/?datasource=tranquility&page={{page}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "9fe02df565db798e"
            ]
        ]
    },
    {
        "id": "46a9940b002fe417",
        "type": "function",
        "z": "b0a467b42952d9b8",
        "name": "headers",
        "func": "const options = {\n  'Authorization': 'Bearer ' + global.get(\"AUTHTOKEN\"),\n  'Content-Type': 'application/json'\n}\nmsg.headers = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 300,
        "wires": [
            [
                "84e034956fded3c5"
            ]
        ]
    },
    {
        "id": "9fe02df565db798e",
        "type": "function",
        "z": "b0a467b42952d9b8",
        "name": "handleResponse",
        "func": "if (msg.payload.length == 1000)\n{\n    //more contracts\n    global.set(\"CONTRACTS\", msg.payload)\n    msg.page = msg.page + 1\n    msg.contracts.push(msg.payload)\n    return [msg, null, null]\n}\nelse if (msg.statusCode === 401 || (msg.statusCode === 403 && msg.payload.error && msg.payload.error === \"token is expired\"))\n{\n    //token expired\n    return [null, msg, null];\n} if (msg.statusCode !== 200) {\n    return [null, null, msg]\n}\nelse\n{\n    //no more contracts\n    msg.contracts.push(msg.payload)\n    return [null, null, msg]\n}\nreturn [null, null, null];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 160,
        "wires": [
            [
                "46a9940b002fe417"
            ],
            [
                "e7d6766c4f4d1c85"
            ],
            [
                "1336ee99b3dc038e"
            ]
        ]
    },
    {
        "id": "fd7304565eefb4d9",
        "type": "http request",
        "z": "b0a467b42952d9b8",
        "name": "refreshTokens",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://login.eveonline.com/v2/oauth/token/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 1180,
        "y": 180,
        "wires": [
            [
                "409c75a68b0f06f6"
            ]
        ]
    },
    {
        "id": "e7d6766c4f4d1c85",
        "type": "function",
        "z": "b0a467b42952d9b8",
        "name": "refreshHeaders",
        "func": "msg.headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Authorization\": \"Basic \" + global.get(\"ESIAPIKEY\")\n};\n\n\nmsg.payload = {\n    \"grant_type\": \"refresh_token\",\n    \"refresh_token\": global.get(\"REFRESHTOKEN\")\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 180,
        "wires": [
            [
                "fd7304565eefb4d9"
            ]
        ]
    },
    {
        "id": "409c75a68b0f06f6",
        "type": "function",
        "z": "b0a467b42952d9b8",
        "name": "setToken",
        "func": "if (msg.statusCode === 200) {\n    global.set(\"AUTHTOKEN\", msg.payload.access_token);\n    return [msg, null];\n} else { \n    msg.payload =\n    {\n        \"Outstanding\": 0,\n        \"InProgress\": 0,\n        \"HundredContracts\": 0,\n        \"MJJitaHundredContracts\": 0,\n        \"error\": true\n    }\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "46a9940b002fe417"
            ],
            [
                "11dc75cc41e4d1d9"
            ]
        ]
    },
    {
        "id": "1336ee99b3dc038e",
        "type": "function",
        "z": "b0a467b42952d9b8",
        "name": "processContracts",
        "func": "const jita_station_id = global.get(\"EVE_DATA_JITA_STATION_ID\");\nconst home_station_id = global.get(\"EVE_DATA_HOMESYSTEM_STATION_ID\");\n\nvar allContracts = []\nfor (var i in msg.contracts) {\n    for (var j in msg.contracts[i]) {\n        allContracts.push(msg.contracts[i][j])\n    }\n}\n\nvar validContracts = allContracts.filter(contract => contract.type == \"courier\").filter(contract => contract.status == \"outstanding\")\n\nvar validContractsProgress = allContracts.filter(contract => contract.type == \"courier\").filter(contract => contract.status == \"in_progress\")\n\nvar last100Contracts = allContracts.filter(contract => contract.type == \"courier\").filter(contract => contract.status == \"finished\").sort((a, b) => {\n    if (a.date_completed < b.date_completed)\n    {\n        return 1\n    }\n    if (b.date_completed < a.date_completed) {\n        return -1\n    }\n    return 0\n}).slice(0, 100)\n\nvar last100MJJitaContracts = allContracts.filter(contract => contract.type == \"courier\").filter(contract => contract.status == \"finished\")\n    .filter(contract => (contract.end_location_id == home_station_id || contract.end_location_id == jita_station_id) && (contract.start_location_id == home_station_id || contract.start_location_id == jita_station_id)).sort((a, b) => {\n    if (a.date_completed < b.date_completed) {\n        return 1\n    }\n    if (b.date_completed < a.date_completed) {\n        return -1\n    }\n    return 0\n}).slice(0, 100)\n\nvar contractsTime = 0\nfor (var i in last100Contracts)\n{\n    var completeDate = new Date(last100Contracts[i].date_completed)\n    var endDate = new Date(last100Contracts[i].date_issued)\n    contractsTime = contractsTime + (completeDate.valueOf() - endDate.valueOf())\n}\n\nvar mJJitacontractsTime = 0\nfor (var i in last100MJJitaContracts) {\n    var completeDate = new Date(last100MJJitaContracts[i].date_completed)\n    var endDate = new Date(last100MJJitaContracts[i].date_issued)\n    mJJitacontractsTime = mJJitacontractsTime + (completeDate.valueOf() - endDate.valueOf())\n}\n\nvar Last100ContractsAVGTime = contractsTime / 100\n\nvar Last100MJJitaContractsAVGTime = mJJitacontractsTime / 100\n\nfunction msToTime(s) {\n    var ms = s % 1000;\n    s = (s - ms) / 1000;\n    var secs = s % 60;\n    s = (s - secs) / 60;\n    var mins = s % 60;\n    var hrs = (s - mins) / 60;\n\n    //return hrs + ':' + mins + ':' + secs;\n    return hrs;\n}\n\nmsg.payload = \n{\n    \"Outstanding\": validContracts.length,\n    \"InProgress\": validContractsProgress.length,\n    \"HundredContracts\": msToTime(Last100ContractsAVGTime),\n    \"MJJitaHundredContracts\": msToTime(Last100MJJitaContractsAVGTime)\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 140,
        "wires": [
            [
                "11dc75cc41e4d1d9"
            ]
        ]
    },
    {
        "id": "03a3abbbeaf621c1",
        "type": "http in",
        "z": "b0a467b42952d9b8",
        "name": "getContracts",
        "url": "/getContracts",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "6ad893986c109683"
            ]
        ]
    },
    {
        "id": "11dc75cc41e4d1d9",
        "type": "http response",
        "z": "b0a467b42952d9b8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 140,
        "wires": []
    },
    {
        "id": "af07e835437dbeb1",
        "type": "http in",
        "z": "b0a467b42952d9b8",
        "name": "",
        "url": "/corporations/:corporation_id/contracts/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "6753e659eb49a1ab"
            ]
        ]
    },
    {
        "id": "003d405fc465831f",
        "type": "http response",
        "z": "b0a467b42952d9b8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 660,
        "wires": []
    },
    {
        "id": "6753e659eb49a1ab",
        "type": "function",
        "z": "b0a467b42952d9b8",
        "name": "function 1",
        "func": "\nmsg.payload = [\n {\n        \"acceptor_id\": 2117867283,\n        \"assignee_id\": 98684131,\n        \"availability\": \"personal\",\n        \"collateral\": 1615863000,\n        \"contract_id\": 219446035,\n        \"date_accepted\": \"2025-06-19T14:47:28Z\",\n        \"date_completed\": \"2025-06-19T14:58:12Z\",\n        \"date_expired\": \"2025-06-25T02:23:39Z\",\n        \"date_issued\": \"2025-06-18T02:23:39Z\",\n        \"days_to_complete\": 7,\n        \"end_location_id\": 1035418656186,\n        \"for_corporation\": true,\n        \"issuer_corporation_id\": 98295309,\n        \"issuer_id\": 2114330853,\n        \"price\": 0,\n        \"reward\": 49158630,\n        \"start_location_id\": 1038536485122,\n        \"status\": \"finished\",\n        \"title\": \"\",\n        \"type\": \"courier\",\n        \"volume\": 330000\n    },\n    {\n        \"acceptor_id\": 0,\n        \"assignee_id\": 98684131,\n        \"availability\": \"personal\",\n        \"collateral\": 3237485184,\n        \"contract_id\": 219457531,\n        \"date_expired\": \"2025-07-16T10:26:30Z\",\n        \"date_issued\": \"2025-06-18T10:26:30Z\",\n        \"days_to_complete\": 14,\n        \"end_location_id\": 1038457641673,\n        \"for_corporation\": false,\n        \"issuer_corporation_id\": 98694583,\n        \"issuer_id\": 203701296,\n        \"price\": 0,\n        \"reward\": 103094685,\n        \"start_location_id\": 60003760,\n        \"status\": \"deleted\",\n        \"title\": \"\",\n        \"type\": \"courier\",\n        \"volume\": 202056.66350000002\n    },\n    {\n        \"acceptor_id\": 308739913,\n        \"assignee_id\": 308739913,\n        \"availability\": \"personal\",\n        \"collateral\": 0,\n        \"contract_id\": 219460924,\n        \"date_accepted\": \"2025-06-18T18:10:39Z\",\n        \"date_completed\": \"2025-06-18T18:10:39Z\",\n        \"date_expired\": \"2025-06-19T12:44:18Z\",\n        \"date_issued\": \"2025-06-18T12:44:18Z\",\n        \"days_to_complete\": 0,\n        \"end_location_id\": 1038457641673,\n        \"for_corporation\": true,\n        \"issuer_corporation_id\": 98684131,\n        \"issuer_id\": 2122769747,\n        \"price\": 1440000000,\n        \"reward\": 0,\n        \"start_location_id\": 1038457641673,\n        \"status\": \"finished\",\n        \"title\": \"https://janice.e-351.com/a/r0O9RZ\",\n        \"type\": \"item_exchange\",\n        \"volume\": 300\n    },\n    {\n        \"acceptor_id\": 2117867283,\n        \"assignee_id\": 98684131,\n        \"availability\": \"personal\",\n        \"collateral\": 550000000,\n        \"contract_id\": 219461352,\n        \"date_accepted\": \"2025-06-18T21:28:14Z\",\n        \"date_completed\": \"2025-06-19T14:04:05Z\",\n        \"date_expired\": \"2025-06-25T12:56:13Z\",\n        \"date_issued\": \"2025-06-18T12:56:13Z\",\n        \"days_to_complete\": 7,\n        \"end_location_id\": 1035927404852,\n        \"for_corporation\": false,\n        \"issuer_corporation_id\": 98177708,\n        \"issuer_id\": 90565654,\n        \"price\": 0,\n        \"reward\": 15500000,\n        \"start_location_id\": 60003760,\n        \"status\": \"finished\",\n        \"title\": \"BPO-BPC-SKILLS ( 80 M3 )\",\n        \"type\": \"courier\",\n        \"volume\": 80.68000000000004\n    },\n    {\n        \"acceptor_id\": 2117867283,\n        \"assignee_id\": 98684131,\n        \"availability\": \"personal\",\n        \"collateral\": 2736679200,\n        \"contract_id\": 219711873,\n        \"date_accepted\": \"2025-06-30T18:54:02Z\",\n        \"date_expired\": \"2025-07-01T11:19:10Z\",\n        \"date_issued\": \"2025-06-24T11:19:10Z\",\n        \"days_to_complete\": 7,\n        \"end_location_id\": 60003760,\n        \"for_corporation\": false,\n        \"issuer_corporation_id\": 98766100,\n        \"issuer_id\": 2117103903,\n        \"price\": 0,\n        \"reward\": 85375292,\n        \"start_location_id\": 1045087024576,\n        \"status\": \"in_progress\",\n        \"title\": \"3dBCOj\",\n        \"type\": \"courier\",\n        \"volume\": 105470\n    },\n    {\n        \"acceptor_id\": 2117867283,\n        \"assignee_id\": 98684131,\n        \"availability\": \"personal\",\n        \"collateral\": 531351793,\n        \"contract_id\": 219711908,\n        \"date_accepted\": \"2025-06-30T18:54:04Z\",\n        \"date_expired\": \"2025-07-01T11:20:44Z\",\n        \"date_issued\": \"2025-06-24T11:20:44Z\",\n        \"days_to_complete\": 7,\n        \"end_location_id\": 60003760,\n        \"for_corporation\": false,\n        \"issuer_corporation_id\": 98766100,\n        \"issuer_id\": 2117103903,\n        \"price\": 0,\n        \"reward\": 63187790,\n        \"start_location_id\": 1045087024576,\n        \"status\": \"in_progress\",\n        \"title\": \"o3PoHo\",\n        \"type\": \"courier\",\n        \"volume\": 105225.948\n    },\n    {\n        \"acceptor_id\": 0,\n        \"assignee_id\": 98684131,\n        \"availability\": \"personal\",\n        \"collateral\": 642615014,\n        \"contract_id\": 219759817,\n        \"date_expired\": \"2025-07-02T16:25:36Z\",\n        \"date_issued\": \"2025-06-25T16:25:36Z\",\n        \"days_to_complete\": 7,\n        \"end_location_id\": 60014946,\n        \"for_corporation\": false,\n        \"issuer_corporation_id\": 98628738,\n        \"issuer_id\": 2121795973,\n        \"price\": 0,\n        \"reward\": 43105862,\n        \"start_location_id\": 60003760,\n        \"status\": \"outstanding\",\n        \"title\": \"\",\n        \"type\": \"courier\",\n        \"volume\": 43152.600000000006\n    },\n    {\n        \"acceptor_id\": 0,\n        \"assignee_id\": 98684131,\n        \"availability\": \"personal\",\n        \"collateral\": 900000000,\n        \"contract_id\": 219813712,\n        \"date_expired\": \"2025-07-04T05:37:23Z\",\n        \"date_issued\": \"2025-06-27T05:37:23Z\",\n        \"days_to_complete\": 3,\n        \"end_location_id\": 1042490470286,\n        \"for_corporation\": true,\n        \"issuer_corporation_id\": 98688782,\n        \"issuer_id\": 2118666624,\n        \"price\": 0,\n        \"reward\": 100000000,\n        \"start_location_id\": 60003760,\n        \"status\": \"outstanding\",\n        \"title\": \"\",\n        \"type\": \"courier\",\n        \"volume\": 330000\n    },\n];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 660,
        "wires": [
            [
                "003d405fc465831f",
                "c8d2b6a61f954fb7"
            ]
        ]
    },
    {
        "id": "c8d2b6a61f954fb7",
        "type": "debug",
        "z": "b0a467b42952d9b8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 760,
        "wires": []
    }
]